<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="(JvDkZIr})=f;Gt4^/sE" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="R)]jievAW!oHO=W6KP7O" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="enum Mob {" line1="    //% block=&quot;duck&quot;" line2="    duck," line3="    //% block=&quot;snake&quot;" line4="    snake," line5="    //% block=&quot;monkey&quot;" line6="    monkey," line7="    //% block=&quot;dog&quot;" line8="    dog," line9="    //% block=&quot;bat&quot;" line10="    bat" line11="}" numlines="12"></mutation><next><block type="typescript_statement" id="ZlKJaTVD%zmdsFSQnU~Z" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace Mobs {" line1="" line2="    function spawn(list: any[]) {" line3="        let mySprite = sprites.create(img`" line4="        . . . . . . . . . . . . . . . . " line5="        . . . . . . . . . . . . . . . . " line6="        . . . . . . . . . . . . . . . . " line7="        . . . . . . . . . . . . . . . . " line8="        . . . . . . . . . . . . . . . . " line9="        . . . . . . . . . . . . . . . . " line10="        . . . . . . . . . . . . . . . . " line11="        . . . . . . . . . . . . . . . . " line12="        . . . . . . . . . . . . . . . . " line13="        . . . . . . . . . . . . . . . . " line14="        . . . . . . . . . . . . . . . . " line15="        . . . . . . . . . . . . . . . . " line16="        . . . . . . . . . . . . . . . . " line17="        . . . . . . . . . . . . . . . . " line18="        . . . . . d . . . . . . . . . . " line19="        . . . . . . . . . . . . . . . . " line20="        `, SpriteKind.Enemy)" line21="        animation.runImageAnimation(" line22="            mySprite," line23="            list," line24="            200," line25="            true" line26="        )" line27="        mySprite.setVelocity(Math.randomRange(0, 60), Math.randomRange(0, 50))" line28="        mySprite.setBounceOnWall(true);" line29="        return mySprite;" line30="    }" line31="    function spawnBat() {" line32="       let list = [img`" line33="    . . f f f . . . . . . . . f f f " line34="    . f f c c . . . . . . f c b b c " line35="    f f c c . . . . . . f c b b c . " line36="    f c f c . . . . . . f b c c c . " line37="    f f f c c . c c . f c b b c c . " line38="    f f c 3 c c 3 c c f b c b b c . " line39="    f f b 3 b c 3 b c f b c c b c . " line40="    . c 1 b b b 1 b c b b c c c . . " line41="    . c 1 b b b 1 b b c c c c . . . " line42="    c b b b b b b b b b c c . . . . " line43="    c b 1 f f 1 c b b b b f . . . . " line44="    f f 1 f f 1 f b b b b f c . . . " line45="    f f 2 2 2 2 f b b b b f c c . . " line46="    . f 2 2 2 2 b b b b c f . . . . " line47="    . . f b b b b b b c f . . . . . " line48="    . . . f f f f f f f . . . . . . " line49="    `, img`" line50="    . . f f f . . . . . . . . . . . " line51="    f f f c c . . . . . . . . f f f " line52="    f f c c c . c c . . . f c b b c " line53="    f f c 3 c c 3 c c f f b b b c . " line54="    f f c 3 b c 3 b c f b b c c c . " line55="    f c b b b b b b c f b c b c c . " line56="    c c 1 b b b 1 b c b b c b b c . " line57="    c b b b b b b b b b c c c b c . " line58="    c b 1 f f 1 c b b c c c c c . . " line59="    c f 1 f f 1 f b b b b f c . . . " line60="    f f f f f f f b b b b f c . . . " line61="    f f 2 2 2 2 f b b b b f c c . . " line62="    . f 2 2 2 2 2 b b b c f . . . . " line63="    . . f 2 2 2 b b b c f . . . . . " line64="    . . . f f f f f f f . . . . . . " line65="    . . . . . . . . . . . . . . . . " line66="    `, img`" line67="    . . . . . . . . . . . . . . . . " line68="    . . . . . . . . . . . . . . . . " line69="    . . . c c . c c . . . . . . . . " line70="    . . f 3 c c 3 c c c . . . . . . " line71="    . f c 3 b c 3 b c c c . . . . . " line72="    f c b b b b b b b b f f . . . . " line73="    c c 1 b b b 1 b b b f f . . . . " line74="    c b b b b b b b b c f f f . . . " line75="    c b 1 f f 1 c b b f f f f . . . " line76="    f f 1 f f 1 f b c c b b b . . . " line77="    f f f f f f f b f c c c c . . . " line78="    f f 2 2 2 2 f b f b b c c c . . " line79="    . f 2 2 2 2 2 b c c b b c . . . " line80="    . . f 2 2 2 b f f c c b b c . . " line81="    . . . f f f f f f f c c c c c . " line82="    . . . . . . . . . . . . c c c c " line83="    `, img`" line84="    . f f f . . . . . . . . f f f . " line85="    f f c . . . . . . . f c b b c . " line86="    f c c . . . . . . f c b b c . . " line87="    c f . . . . . . . f b c c c . . " line88="    c f f . . . . . f f b b c c . . " line89="    f f f c c . c c f b c b b c . . " line90="    f f f c c c c c f b c c b c . . " line91="    . f c 3 c c 3 b c b c c c . . . " line92="    . c b 3 b c 3 b b c c c c . . . " line93="    c c b b b b b b b b c c . . . . " line94="    c 1 1 b b b 1 1 b b b f c . . . " line95="    f b b b b b b b b b b f c c . . " line96="    f b c b b b c b b b b f . . . . " line97="    . f 1 f f f 1 b b b c f . . . . " line98="    . . f b b b b b b c f . . . . . " line99="    . . . f f f f f f f . . . . . . " line100="    `]" line101="    return spawn(list);" line102="    }" line103="    function spawnSnake() {" line104="        let list2 = [img`" line105="    . . . . . . c c c c c c . . . . " line106="    . . . . . c 6 7 7 7 7 6 c . . . " line107="    . . . . c 7 7 7 7 7 7 7 7 c . . " line108="    . . . c 6 7 7 7 7 7 7 7 7 6 c . " line109="    . . . c 7 7 7 c 6 6 6 6 c 7 c . " line110="    . . . f 7 7 7 6 f 6 6 f 6 7 f . " line111="    . . . f 7 7 7 7 7 7 7 7 7 7 f . " line112="    . . c f 6 7 7 c 6 7 7 7 7 f . . " line113="    . c 7 7 f 6 7 7 c c c c f . . . " line114="    c 7 7 7 7 f c 6 7 7 7 2 7 c . . " line115="    c c 6 7 7 6 c f c 7 7 2 7 7 c . " line116="    . . c 6 6 6 c c f 6 7 1 1 1 1 c " line117="    . . f 6 6 6 6 c 6 6 1 1 1 1 1 f " line118="    . . f c 6 6 6 6 6 1 1 1 1 1 6 f " line119="    . . . f 6 6 6 1 1 1 1 1 1 6 f . " line120="    . . . . f c c c c c c c c c . . " line121="    `, img`" line122="    . . . . . . . c c c c c c . . . " line123="    . . . . . . c 6 7 7 7 7 6 c . . " line124="    . . . . . c 7 7 7 7 7 7 7 7 c . " line125="    . . . . c 6 7 7 7 7 7 7 7 7 6 c " line126="    . . . . c 7 7 7 c 6 6 6 6 c 7 c " line127="    . . . . f 7 7 7 6 f 6 6 f 6 7 f " line128="    . . . . f 7 7 7 7 7 7 7 7 7 7 f " line129="    . . . . f 6 7 7 c 6 7 7 7 7 f . " line130="    . . c c c f 6 7 7 c c c c f . . " line131="    . c 7 7 7 c c f 7 7 7 2 6 c . . " line132="    c 7 7 7 7 6 f c 7 7 2 7 7 6 c . " line133="    c c c 6 6 6 c 6 6 7 1 1 1 1 c . " line134="    . . c 6 6 6 6 6 6 1 1 1 1 1 c . " line135="    . . c 6 6 6 6 6 1 1 1 1 1 6 c . " line136="    . . c c 6 6 7 1 1 1 1 1 6 c . . " line137="    . . . c c c c c c c c c c . . . " line138="    `]" line139="        return spawn(list2);" line140="    }" line141="" line142="    function spawnDog() {" line143="        let list3 = [img`" line144="    . . 4 4 4 . . . . 4 4 4 . . . . " line145="    . 4 5 5 5 e . . e 5 5 5 4 . . . " line146="    4 5 5 5 5 5 e e 5 5 5 5 5 4 . . " line147="    4 5 5 4 4 5 5 5 5 4 4 5 5 4 . . " line148="    e 5 4 4 5 5 5 5 5 5 4 4 5 e . . " line149="    . e e 5 5 5 5 5 5 5 5 e e . . . " line150="    . . e 5 f 5 5 5 5 f 5 e . . . . " line151="    . . f 5 5 5 4 4 5 5 5 f . . f f " line152="    . . f 4 5 5 f f 5 5 6 f . f 5 f " line153="    . . . f 6 6 6 6 6 6 4 4 f 5 5 f " line154="    . . . f 4 5 5 5 5 5 5 4 4 5 f . " line155="    . . . f 5 5 5 5 5 4 5 5 f f . . " line156="    . . . f 5 f f f 5 f f 5 f . . . " line157="    . . . f f . . f f . . f f . . . " line158="    `, img`" line159="    . . . . . . . . . . . . . . . . " line160="    . . 4 4 4 . . . . 4 4 4 . . . . " line161="    . 4 5 5 5 e . . e 5 5 5 4 . . . " line162="    4 5 5 5 5 5 e e 5 5 5 5 5 4 . . " line163="    4 5 5 4 4 5 5 5 5 4 4 5 5 4 . . " line164="    e 5 4 4 5 5 5 5 5 5 4 4 5 e . . " line165="    . e e 5 5 5 5 5 5 5 5 e e . . . " line166="    . . e 5 f 5 5 5 5 f 5 e . . . . " line167="    . . f 5 5 5 4 4 5 5 5 f . f f . " line168="    . . . 4 5 5 f f 5 5 6 f f 5 f . " line169="    . . . f 6 6 6 6 6 6 4 4 4 5 f . " line170="    . . . f 5 5 5 5 5 5 5 f f f . . " line171="    . . . f 5 4 5 f f f 5 f . . . . " line172="    . . . f f f f f . . f f . . . . " line173="    `, img`" line174="    . . . . . . . . . . . . . . . . " line175="    . . 4 4 4 . . . . 4 4 4 . . . . " line176="    . 4 5 5 5 e . . e 5 5 5 4 . . . " line177="    4 5 5 5 5 5 e e 5 5 5 5 5 4 . . " line178="    4 5 5 4 4 5 5 5 5 4 4 5 5 4 . . " line179="    e 5 4 4 5 5 5 5 5 5 4 4 5 e . . " line180="    . e e 5 5 5 5 5 5 5 5 e e . . . " line181="    . . e 5 f 5 5 5 5 f 5 e . . . . " line182="    . . f 5 5 5 4 4 5 5 5 f . f f . " line183="    . . . 4 5 5 f f 5 5 6 f f 5 f . " line184="    . . . f 6 6 6 6 6 6 4 f 5 5 f . " line185="    . . . f 5 5 5 5 5 5 5 4 5 f . . " line186="    . . . . f 5 4 5 f 5 f f f . . . " line187="    . . . . . f f f f f f f . . . . " line188="    `]" line189="        return spawn(list3);" line190="    }" line191="" line192="    function spawnMonkey() {" line193="        let list4 = [img`" line194="    . . . . f f f f f . . . . . . . " line195="    . . . f e e e e e f . . . . . . " line196="    . . f d d d d e e e f . . . . . " line197="    . c d f d d f d e e f f . . . . " line198="    . c d f d d f d e e d d f . . . " line199="    c d e e d d d d e e b d c . . . " line200="    c d d d d c d d e e b d c . f f " line201="    c c c c c d d d e e f c . f e f " line202="    . f d d d d d e e f f . . f e f " line203="    . . f f f f f e e e e f . f e f " line204="    . . . . f e e e e e e e f f e f " line205="    . . . f e f f e f e e e e f f . " line206="    . . . f e f f e f e e e e f . . " line207="    . . . f d b f d b f f e f . . . " line208="    . . . f d d c d d b b d f . . . " line209="    . . . . f f f f f f f f f . . . " line210="    `, img`" line211="    . . . . f f f f f . . . . . . . " line212="    . . . f e e e e e f . . . . . . " line213="    . . f d d d d e e e f . . . . . " line214="    . c d f d d f d e e f . . . . . " line215="    . c d f d d f d e e f f . . . . " line216="    c d e e d d d d e e d d f . . . " line217="    c d d d d c d d e e b d c . . . " line218="    c c c c c d d e e e b d c . f f " line219="    . f d d d d e e e f f c . f e f " line220="    . f f f f f f e e e e f . f e f " line221="    . f f f f e e e e e e e f f e f " line222="    f d d f d d f e f e e e e f f . " line223="    f d b f d b f e f e e e e f . . " line224="    f f f f f f f f f f f f e f . . " line225="    . . . . . . . . . f c d d f . . " line226="    . . . . . . . . . . f f f f . . " line227="    `, img`" line228="    . . . . f f f f f . . . . . . . " line229="    . . . f e e e e e f . . . . . . " line230="    . . f d d d d e e e f f . . . . " line231="    . c d d d d d d e e d d f . . . " line232="    . c d f d d f d e e b d c . . . " line233="    c d d f d d f d e e b d c . f f " line234="    c d e e d d d d e e f c . f e f " line235="    c d d d d c d e e e f . . f e f " line236="    . f c c c d e e e f f . . f e f " line237="    . . f f f f f e e e e f . f e f " line238="    . . . . f e e e e e e e f f f . " line239="    . . f f e f e e f e e e e f . . " line240="    . f e f f e e f f f e e e f . . " line241="    f d d b d d c f f f f f f b f . " line242="    f d d c d d d f . . f c d d f . " line243="    . f f f f f f f . . . f f f . . " line244="    `, img`" line245="    . . . . f f f f f . . . . . . . " line246="    . . . f e e e e e f f f . . . . " line247="    . . f d d d e e e e d d f . . . " line248="    . c d d d d d e e e b d c . . . " line249="    . c d d d d d d e e b d c . . . " line250="    c d d f d d f d e e f c . f f . " line251="    c d d f d d f d e e f . . f e f " line252="    c d e e d d d d e e f . . f e f " line253="    . f d d d c d e e f f . . f e f " line254="    . . f f f d e e e e e f . f e f " line255="    . . . . f e e e e e e e f f f . " line256="    . . . . f f e e e e e b f f . . " line257="    . . . f e f f e e c d d f f . . " line258="    . . f d d b d d c f f f . . . . " line259="    . . f d d c d d d f f . . . . . " line260="    . . . f f f f f f f . . . . . . " line261="    `, img`" line262="    . . . . f f f f f . . . . . . . " line263="    . . . f e e e e e f . . . . . . " line264="    . . f d d d d e e e f . . . . . " line265="    . c d f d d f d e e f f . . . . " line266="    . c d f d d f d e e d d f . . . " line267="    c d e e d d d d e e b d c . . . " line268="    c d d d d c d d e e b d c . . . " line269="    c c c c c d d e e e f c . . . . " line270="    . f d d d d e e e f f . . . . . " line271="    . . f f f f f e e e e f . . . . " line272="    . . . . f f e e e e e e f . f f " line273="    . . . f e e f e e f e e f . e f " line274="    . . f e e f e e f e e e f . e f " line275="    . f b d f d b f b b f e f f e f " line276="    . f d d f d d f d d b e f f f f " line277="    . . f f f f f f f f f f f f f . " line278="    `]" line279="        return spawn(list4);" line280="    }" line281="" line282="    function spawnDuck() {" line283="        let list5 = [img`" line284="    . . . . . . . . . . . . . . . . " line285="    . . . . . . . . . . . . . . . . " line286="    . . . . . . . . . b 5 5 b . . . " line287="    . . . . . . b b b b b b . . . . " line288="    . . . . . b b 5 5 5 5 5 b . . . " line289="    . b b b b b 5 5 5 5 5 5 5 b . . " line290="    . b d 5 b 5 5 5 5 5 5 5 5 b . . " line291="    . . b 5 5 b 5 d 1 f 5 d 4 f . . " line292="    . . b d 5 5 b 1 f f 5 4 4 c . . " line293="    b b d b 5 5 5 d f b 4 4 4 4 b . " line294="    b d d c d 5 5 b 5 4 4 4 4 4 4 b " line295="    c d d d c c b 5 5 5 5 5 5 5 b . " line296="    c b d d d d d 5 5 5 5 5 5 5 b . " line297="    . c d d d d d d 5 5 5 5 5 d b . " line298="    . . c b d d d d d 5 5 5 b b . . " line299="    . . . c c c c c c c c b b . . . " line300="    `, img`" line301="    . . . . . . . . . . . . . . . . " line302="    . . . . . . . . . . b 5 b . . . " line303="    . . . . . . . . . b 5 b . . . . " line304="    . . . . . . b b b b b b . . . . " line305="    . . . . . b b 5 5 5 5 5 b . . . " line306="    . b b b b b 5 5 5 5 5 5 5 b . . " line307="    . b d 5 b 5 5 5 5 5 5 5 5 b . . " line308="    . . b 5 5 b 5 d 1 f 5 d 4 f . . " line309="    . . b d 5 5 b 1 f f 5 4 4 c . . " line310="    b b d b 5 5 5 d f b 4 4 4 4 4 b " line311="    b d d c d 5 5 b 5 4 4 4 4 4 b . " line312="    c d d d c c b 5 5 5 5 5 5 5 b . " line313="    c b d d d d d 5 5 5 5 5 5 5 b . " line314="    . c d d d d d d 5 5 5 5 5 d b . " line315="    . . c b d d d d d 5 5 5 b b . . " line316="    . . . c c c c c c c c b b . . . " line317="    `, img`" line318="    . . . . . . . . . . b 5 b . . . " line319="    . . . . . . . . . b 5 b . . . . " line320="    . . . . . . . . . b c . . . . . " line321="    . . . . . . b b b b b b . . . . " line322="    . . . . . b b 5 5 5 5 5 b . . . " line323="    . . . . b b 5 d 1 f 5 5 d f . . " line324="    . . . . b 5 5 1 f f 5 d 4 c . . " line325="    . . . . b 5 5 d f b d d 4 4 . . " line326="    b d d d b b d 5 5 5 4 4 4 4 4 b " line327="    b b d 5 5 5 b 5 5 4 4 4 4 4 b . " line328="    b d c 5 5 5 5 d 5 5 5 5 5 b . . " line329="    c d d c d 5 5 b 5 5 5 5 5 5 b . " line330="    c b d d c c b 5 5 5 5 5 5 5 b . " line331="    . c d d d d d d 5 5 5 5 5 d b . " line332="    . . c b d d d d d 5 5 5 b b . . " line333="    . . . c c c c c c c c b b . . . " line334="    `, img`" line335="    . . . . . . . . . . b 5 b . . . " line336="    . . . . . . . . . b 5 b . . . . " line337="    . . . . . . b b b b b b . . . . " line338="    . . . . . b b 5 5 5 5 5 b . . . " line339="    . . . . b b 5 d 1 f 5 d 4 c . . " line340="    . . . . b 5 5 1 f f d d 4 4 4 b " line341="    . . . . b 5 5 d f b 4 4 4 4 b . " line342="    . . . b d 5 5 5 5 4 4 4 4 b . . " line343="    . . b d d 5 5 5 5 5 5 5 5 b . . " line344="    . b d d d d 5 5 5 5 5 5 5 5 b . " line345="    b d d d b b b 5 5 5 5 5 5 5 b . " line346="    c d d b 5 5 d c 5 5 5 5 5 5 b . " line347="    c b b d 5 d c d 5 5 5 5 5 5 b . " line348="    . b 5 5 b c d d 5 5 5 5 5 d b . " line349="    b b c c c d d d d 5 5 5 b b . . " line350="    . . . c c c c c c c c b b . . . " line351="    `, img`" line352="    . . . . . . . . . . b 5 b . . . " line353="    . . . . . . . . . b 5 b . . . . " line354="    . . . . . . b b b b b b . . . . " line355="    . . . . . b b 5 5 5 5 5 b . . . " line356="    . . . . b b 5 d 1 f 5 d 4 c . . " line357="    . . . . b 5 5 1 f f d d 4 4 4 b " line358="    . . . . b 5 5 d f b 4 4 4 4 b . " line359="    . . . b d 5 5 5 5 4 4 4 4 b . . " line360="    . b b d d d 5 5 5 5 5 5 5 b . . " line361="    b d d d b b b 5 5 5 5 5 5 5 b . " line362="    c d d b 5 5 d c 5 5 5 5 5 5 b . " line363="    c b b d 5 d c d 5 5 5 5 5 5 b . " line364="    c b 5 5 b c d d 5 5 5 5 5 5 b . " line365="    b b c c c d d d 5 5 5 5 5 d b . " line366="    . . . . c c d d d 5 5 5 b b . . " line367="    . . . . . . c c c c c b b . . . " line368="    `, img`" line369="    . . . . . . . . . . b 5 b . . . " line370="    . . . . . . . . . b 5 b . . . . " line371="    . . . . . . b b b b b b . . . . " line372="    . . . . . b b 5 5 5 5 5 b . . . " line373="    . . . . b b 5 d 1 f 5 5 d f . . " line374="    . . . . b 5 5 1 f f 5 d 4 c . . " line375="    . . . . b 5 5 d f b d d 4 4 . . " line376="    . b b b d 5 5 5 5 5 4 4 4 4 4 b " line377="    b d d d b b d 5 5 4 4 4 4 4 b . " line378="    b b d 5 5 5 b 5 5 5 5 5 5 b . . " line379="    c d c 5 5 5 5 d 5 5 5 5 5 5 b . " line380="    c b d c d 5 5 b 5 5 5 5 5 5 b . " line381="    . c d d c c b d 5 5 5 5 5 d b . " line382="    . . c b d d d d d 5 5 5 b b . . " line383="    . . . c c c c c c c c b b . . . " line384="    . . . . . . . . . . . . . . . . " line385="    `]" line386="" line387="      return spawn(list5);" line388="    }" line389="    //% block" line390="    export function spawnMob(mob: Mob) : Sprite {" line391="        switch (mob) {" line392="            case Mob.duck: return spawnDuck();" line393="            case Mob.dog: return spawnDog();" line394="            case Mob.bat: return spawnBat();" line395="            case Mob.snake: return spawnSnake();" line396="            case Mob.monkey: return spawnMonkey();" line397="        }" line398="        return spawnDuck();" line399="    }" line400="}" numlines="401"></mutation></block></next></block></statement></block></xml>